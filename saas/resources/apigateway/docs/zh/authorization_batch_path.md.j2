### 批量资源拓扑授权/回收

对多个资源拓扑, 多个操作的授权与回收接口


{% include '_api_v1_open_authorization_path.md.j2' %}


#### Parameters


| 字段 |  类型 |是否必须  | 描述  |
|:---|:---|:---|:---|
| asynchronous |  布尔  | 是   | 是否异步调用, 默认 否, 当前只支持同步 |
| operate |  string   | 是   | grant 或 revoke |
| system |  string  | 是   | 系统 id |
| actions |  Arrary[Object]   | 是   | 操作 |
| subject |  Object   | 是   | 授权对象 |
| resources |  Arrary[Object]   | 是   | 资源拓扑, 资源类型的顺序必须操作注册时的顺序一致|
| expired_at | int | 否 | body | 过期时间戳(单位秒)，即用户在 expired_at 后将不具有该权限 |

actions

| 字段 |  类型 |是否必须  | 描述  |
|:---|:---|:---|:---|
| id    |  string  | 是   | 操作 ID |

subject

| 字段 |  类型 |是否必须  | 描述  |
|:---|:---|:---|:---|
| type    |  string  | 是   | 授权对象类型, 当前只支持 user |
| id    |  string  | 是   | 授权对象 ID |

resources

| 字段 |  类型 |是否必须  | 描述  |
|:---|:---|:---|:---|
| system |  string  | 是   | 资源系统 ID |
| type |  string  | 是   | 资源类型 ID |
| paths | Arrary[[Object]] | 是 | 批量资源拓扑，`最多1000个` |

resources.paths

| 字段 |  类型 |是否必须  | 描述  |
|:---|:---|:---|:---|
| type |  string  | 是   | 拓扑节点类型 ID |
| id | string | 是 | 拓扑节点实例 ID |
| name | string | 是 | 拓扑节点实例名称 |

#### Request

```json
{
  "asynchronous": false,
  "operate": "grant",
  "system": "bk_cmdb",
  "actions": [  # 批量的操作
    {
      "id": "edit_host"
    }
  ],
  "subject": {
    "type": "user",
    "id": "admin"
  },
  "resources": [
    {  # 操作关联的资源类型, 必须与所有的actions都匹配, 资源类型的顺序必须操作注册时的顺序一致
      "system": "bk_cmdb",
      "type": "host",
      "paths": [  # 批量资源拓扑
        [
          {
            "type": "biz",
            "id": "1",
            "name": "biz1"
          },
          {
            "type": "set",
            "id": "*",
            "name": ""
          }
        ]
      ]
    }
  ],
  "expired_at: 1704042061
}
```

#### Response

| 字段      | 类型      | 描述      |
|:---|:---|:---|
| policy_id   | int     | 权限策略 id |
| action   | Object     | 操作 |

```json
{
  "code": 0,
  "message": "ok",
  "data": [
    {
      "action": {
        "id": "edit_host"
      },
      "policy_id": 1
    }
  ]
}
```

#### Response when async (暂未实现)

```json
{
  "code": 0,
  "message": "ok",
  "data": {
    "task_id": 1  // 任务id
  }
}
```
